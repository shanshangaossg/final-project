# deal with the unbalanced dataset
import pandas as pd
from google.colab import drive
drive.mount('/content/drive')
node_file = "/content/drive/My Drive/final_project/data/raw/HIV_train.csv"

data = pd.read_csv(node_file )
data.index = data["index"]
data["HIV_active"].value_counts()
start_index = data.iloc[0]["index"]

# %% Apply oversampling

# Check how many additional samples we need
neg_class = data["HIV_active"].value_counts()[0]
pos_class = data["HIV_active"].value_counts()[1]
multiplier = int(neg_class/pos_class) - 1
print(neg_class)
print(pos_class)
print(multiplier)

from sklearn.utils import resample
positive_samples = data[data["HIV_active"] == 1]
negative_samples = data[data["HIV_active"] == 0]
positive_oversampled = pd.concat([positive_samples] * 2, ignore_index=True)
negative_downsampled = resample(negative_samples,
                                replace=False,
                                n_samples=len(positive_oversampled),
                                random_state=42)

balanced_data = pd.concat([positive_oversampled, negative_downsampled])
# Shuffle dataset
balanced_data = balanced_data.sample(frac=1).reset_index(drop=True)
# Re-assign index (This is our ID later)
index = range(start_index, start_index + balanced_data.shape[0])
balanced_data.index = index
balanced_data["index"] = balanced_data.index
print(balanced_data["HIV_active"].value_counts(),len(balanced_data))

balanced_data.head()
